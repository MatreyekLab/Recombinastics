pca2$treatment <- combined_data[,"treatment"]
pca2$treatment <- factor(pca2$treatment, levels = c("none","recomb","ap1903"))
custom_color_scale <- c("none" = "magenta", "ap1903" = "cyan", "recomb" = "green")
ggplot() + theme_bw() + theme(panel.grid.minor = element_blank()) +
scale_color_manual(values = custom_color_scale) +
scale_x_continuous(limits = c(-5,5)) +
scale_y_continuous(limits = c(-3,2)) +
geom_point(data = pca2, aes(x = pc1, y = pc2, color = treatment), alpha = 0.05)
ggplot() + theme_bw() + theme(panel.grid.minor = element_blank()) +
scale_color_manual(values = custom_color_scale) +
scale_x_continuous(limits = c(-5,5)) +
scale_y_continuous(limits = c(-3,2)) +
geom_point(data = pca2, aes(x = pc1, y = pc2), alpha = 0.05) +
facet_grid(rows = vars(treatment))
pca_details <- cbind(combined_for_umap,pca2)
pca_details_melted <- melt(pca_details[,c("treatment","blu","grn","red","zir")], id. = "treatment")
ggplot() + theme_bw() +
scale_x_log10() +
geom_histogram(data = pca_details_melted, aes(x = value)) +
facet_grid(cols = vars(variable))
blu_cutoff <- 1e3
grn_cutoff <- 1e4
red_cutoff <- 1e4
zir_cutoff <- 4e2
ggplot() + theme_bw() + scale_x_log10() + geom_histogram(data = pca_details, aes(x = blu)) + geom_vline(xintercept = blu_cutoff)
ggplot() + theme_bw() + scale_x_log10() + geom_histogram(data = pca_details, aes(x = grn)) + geom_vline(xintercept = grn_cutoff)
ggplot() + theme_bw() + scale_x_log10() + geom_histogram(data = pca_details, aes(x = red)) + geom_vline(xintercept = red_cutoff)
ggplot() + theme_bw() + scale_x_log10() + geom_histogram(data = pca_details, aes(x = zir)) + geom_vline(xintercept = zir_cutoff)
pca_details$blu2 <- 0
pca_details$grn2 <- 0
pca_details$red2 <- 0
pca_details$zir2 <- 0
for(x in 1:nrow(pca_details)){
if(pca_details$blu[x] > blu_cutoff){pca_details$blu2[x] <- 1}
if(pca_details$grn[x] > grn_cutoff){pca_details$grn2[x] <- 1}
if(pca_details$red[x] > red_cutoff){pca_details$red2[x] <- 1}
if(pca_details$zir[x] > zir_cutoff){pca_details$zir2[x] <- 1}
}
pca_details$bgrn <- paste(pca_details$blu2,pca_details$grn2,pca_details$red2,pca_details$zir2,sep="")
bgrn_table <- data.frame(table(pca_details$bgrn))
zir_cutoff <- 1e3
ggplot() + theme_bw() + scale_x_log10() + geom_histogram(data = pca_details, aes(x = blu)) + geom_vline(xintercept = blu_cutoff)
ggplot() + theme_bw() + scale_x_log10() + geom_histogram(data = pca_details, aes(x = grn)) + geom_vline(xintercept = grn_cutoff)
ggplot() + theme_bw() + scale_x_log10() + geom_histogram(data = pca_details, aes(x = red)) + geom_vline(xintercept = red_cutoff)
ggplot() + theme_bw() + scale_x_log10() + geom_histogram(data = pca_details, aes(x = zir)) + geom_vline(xintercept = zir_cutoff)
pca_details$blu2 <- 0
pca_details$grn2 <- 0
pca_details$red2 <- 0
pca_details$zir2 <- 0
for(x in 1:nrow(pca_details)){
if(pca_details$blu[x] > blu_cutoff){pca_details$blu2[x] <- 1}
if(pca_details$grn[x] > grn_cutoff){pca_details$grn2[x] <- 1}
if(pca_details$red[x] > red_cutoff){pca_details$red2[x] <- 1}
if(pca_details$zir[x] > zir_cutoff){pca_details$zir2[x] <- 1}
}
pca_details$bgrn <- paste(pca_details$blu2,pca_details$grn2,pca_details$red2,pca_details$zir2,sep="")
bgrn_table <- data.frame(table(pca_details$bgrn))
View(bgrn_table)
bgrn_table <- data.frame(table(pca_details$bgrn)) %>% arrange(value)
View(bgrn_table)
bgrn_table <- data.frame(table(pca_details$bgrn)) %>% arrange(Freq)
View(bgrn_table)
bgrn_table <- data.frame(table(pca_details$bgrn)) %>% arrange(desc(Freq))
View(bgrn_table)
pca_details$label <- NA
for(x in 1:nrow(pca_details)){
if(pca_details$bgrn[x] == "1001"){pca_details$label[x] <- "Unrecombined"}
}
View(pca_details)
if(pca_details$bgrn[x] == "0110"){pca_details$label[x] <- "Doubly_recombined"}
for(x in 1:nrow(pca_details)){
if(pca_details$bgrn[x] == "1001"){pca_details$label[x] <- "Unrecombined"}
if(pca_details$bgrn[x] == "0110"){pca_details$label[x] <- "Doubly_recombined"}
}
View(pca_details)
ggplot() + theme_bw() + theme(panel.grid.minor = element_blank()) +
scale_color_manual(values = custom_color_scale) +
scale_x_continuous(limits = c(-5,5)) +
scale_y_continuous(limits = c(-3,2)) +
geom_point(data = pca_details, aes(x = pc1, y = pc2), alpha = 0.05) +
facet_grid(rows = vars(treatment))
ggplot() + theme_bw() + theme(panel.grid.minor = element_blank()) +
scale_color_manual(values = custom_color_scale) +
scale_x_continuous(limits = c(-5,5)) +
scale_y_continuous(limits = c(-3,2)) +
geom_point(data = pca_details, aes(x = pc1, y = pc2, color = label), alpha = 0.05) +
facet_grid(rows = vars(treatment))
ggplot() + theme_bw() + theme(panel.grid.minor = element_blank()) +
scale_color_manual(values = custom_color_scale) +
scale_x_continuous(limits = c(-5,5)) +
scale_y_continuous(limits = c(-3,2)) +
geom_point(data = pca_details, aes(x = pc1, y = pc2, color = label), alpha = 0.1) +
facet_grid(rows = vars(treatment))
View(pca_details)
custom_color_scale2 <- c(NA = "black", "Unrecombined" = "blue", "Doubly_recombined" = "purple")
pca_details$label <- "Unannotated"
for(x in 1:nrow(pca_details)){
if(pca_details$bgrn[x] == "1001"){pca_details$label[x] <- "Unrecombined"}
if(pca_details$bgrn[x] == "0110"){pca_details$label[x] <- "Doubly_recombined"}
}
custom_color_scale2 <- c("Unannotated" = "black", "Unrecombined" = "blue", "Doubly_recombined" = "purple")
ggplot() + theme_bw() + theme(panel.grid.minor = element_blank()) +
scale_color_manual(values = custom_color_scale2) +
scale_x_continuous(limits = c(-5,5)) +
scale_y_continuous(limits = c(-3,2)) +
geom_point(data = pca_details, aes(x = pc1, y = pc2, color = label), alpha = 0.05) +
facet_grid(rows = vars(treatment))
View(bgrn_table)
for(x in 1:nrow(pca_details)){
if(pca_details$bgrn[x] == "1001"){pca_details$label[x] <- "Unrecombined"}
if(pca_details$bgrn[x] == "0110"){pca_details$label[x] <- "Doubly_recombined"}
if(pca_details$bgrn[x] == "1010"){pca_details$label[x] <- "GA_only"}
if(pca_details$bgrn[x] == "0101"){pca_details$label[x] <- "GT_only"}
}
custom_color_scale2 <- c("Unannotated" = "black", "Unrecombined" = "blue", "Doubly_recombined" = "purple", "GA_only" = "red", "GT_only" = "green")
ggplot() + theme_bw() + theme(panel.grid.minor = element_blank()) +
scale_color_manual(values = custom_color_scale2) +
scale_x_continuous(limits = c(-5,5)) +
scale_y_continuous(limits = c(-3,2)) +
geom_point(data = pca_details, aes(x = pc1, y = pc2, color = label), alpha = 0.05) +
facet_grid(rows = vars(treatment))
ggplot() + theme_bw() + theme(panel.grid.minor = element_blank()) +
scale_color_manual(values = custom_color_scale2) +
scale_x_continuous(limits = c(-5,5)) +
scale_y_continuous(limits = c(-3,2)) +
geom_point(data = pca_details, aes(x = pc1, y = pc2, color = label), alpha = 0.1) +
facet_grid(rows = vars(treatment))
custom_color_scale2 <- c("Unannotated" = "black", "Unrecombined" = "blue", "Doubly_recombined" = "purple", "GA_only" = "red", "GT_only" = "darkgreen")
ggplot() + theme_bw() + theme(panel.grid.minor = element_blank()) +
scale_color_manual(values = custom_color_scale2) +
scale_x_continuous(limits = c(-5,5)) +
scale_y_continuous(limits = c(-3,2)) +
geom_point(data = pca_details, aes(x = pc1, y = pc2, color = label), alpha = 0.1) +
facet_grid(rows = vars(treatment))
c11_none_raw <- read.csv(file = "data/flow/201016_F74_G783A_Clone_Comparisons/Clone11_none.csv")
c11_none <- c11_none_raw[,c("FSC.A","SSC.A","VL1.A","BL1.A","YL2.A","RL1.A")]; colnames(c11_none) <- c("fsc","ssc","blu","grn","red","nir")
c11_none$clone <- "c11"; c11_none$treatment <- "none"
c11_recomb_raw <- read.csv(file = "data/flow/201016_F74_G783A_Clone_Comparisons/Clone11_recomb.csv")
c11_recomb <- c11_recomb_raw[,c("FSC.A","SSC.A","VL1.A","BL1.A","YL2.A","RL1.A")]; colnames(c11_recomb) <- c("fsc","ssc","blu","grn","red","nir")
c11_recomb$clone <- "c11"; c11_recomb$treatment <- "recomb"
c11_ap1903_raw <- read.csv(file = "data/flow/201016_F74_G783A_Clone_Comparisons/Clone11_ap1903.csv")
c11_ap1903 <- c11_ap1903_raw[,c("FSC.A","SSC.A","VL1.A","BL1.A","YL2.A","RL1.A")]; colnames(c11_ap1903) <- c("fsc","ssc","blu","grn","red","nir")
c11_ap1903$clone <- "c11"; c11_ap1903$treatment <- "ap1903"
cell_number <- 2000
combined_data <- rbind(c11_none[1:cell_number,], c11_recomb[1:cell_number,], c11_ap1903[1:cell_number,])
combined_data$treatment <- factor(combined_data$treatment, levels = c("recomb","none","ap1903"))
plot_alpha <- 0.2
axis_limits <- c(10,1e6)
custom_color_scale <- c("none" = "magenta", "recomb" = "black", "ap1903" = "cyan")
c11_bn_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank(), legend.position = "none") +
scale_color_manual(values = custom_color_scale) +
scale_x_log10(limits = axis_limits) + scale_y_log10(limits = axis_limits) +
geom_point(data = combined_data, aes(x = blu, y = nir, color = treatment), alpha = plot_alpha)
c11_bg_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank(), legend.position = "none") +
scale_color_manual(values = custom_color_scale) +
scale_x_log10(limits = axis_limits) + scale_y_log10(limits = axis_limits) +
geom_point(data = combined_data, aes(x = blu, y = grn, color = treatment), alpha = plot_alpha)
c11_br_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank(), legend.position = "none") +
scale_color_manual(values = custom_color_scale) +
scale_x_log10(limits = axis_limits) + scale_y_log10(limits = axis_limits) +
geom_point(data = combined_data, aes(x = blu, y = red, color = treatment), alpha = plot_alpha)
c11_ng_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank(), legend.position = "none") +
scale_color_manual(values = custom_color_scale) +
scale_x_log10(limits = axis_limits) + scale_y_log10(limits = axis_limits) +
geom_point(data = combined_data, aes(x = nir, y = grn, color = treatment), alpha = plot_alpha)
c11_nr_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank(), legend.position = "none") +
scale_color_manual(values = custom_color_scale) +
scale_x_log10(limits = axis_limits) + scale_y_log10(limits = axis_limits) +
geom_point(data = combined_data, aes(x = nir, y = red, color = treatment), alpha = plot_alpha)
c11_gr_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank(), legend.position = "none") +
scale_color_manual(values = custom_color_scale) +
scale_x_log10(limits = axis_limits) + scale_y_log10(limits = axis_limits) +
geom_point(data = combined_data, aes(x = grn, y = red, color = treatment), alpha = plot_alpha) +
geom_rect(mapping = aes(xmin = 3e4, xmax = 1e6, ymin = 3e4, ymax = 1e6), alpha = 0, color = "black", linetype = 2)
c11_gr_plot
c11_arranged_plot <- grid.arrange(c11_bn_plot, c11_bg_plot, c11_br_plot, c11_ng_plot, c11_nr_plot, c11_gr_plot, ncol=6, nrow=1)
ggsave(file = "plots/201016/c11_arranged_plot.png", c11_arranged_plot, height = 3, width = 18)
paste("Percent double positive before selection:", round(sum(c11_recomb$grn >= 3e4 & c11_recomb$red >= 3e4) / nrow(c11_recomb) * 100,2))
paste("Percent double positive after selection:", round(sum(c11_ap1903$grn >= 3e4 & c11_ap1903$red >= 3e4) / nrow(c11_ap1903) * 100,2))
library(uwot)
combined_data <- rbind(c11_none[1:2000,], c11_recomb[1:2000,], c11_ap1903[1:2000,])
ggplot() + theme_bw() + scale_x_log10() + scale_y_log10() + geom_point(data = combined_data, aes(x = red, y = nir))
combined_data$zir <- combined_data$nir - combined_data$red * 0.01
ggplot() + theme_bw() + scale_x_log10() + scale_y_log10() + geom_point(data = combined_data, aes(x = red, y = zir))
combined_for_umap <- combined_data[,c("blu","grn","red","zir")]
umap <- umap(combined_for_umap, n_neighbors = 6, min_dist = 0.5, verbose = TRUE, n_threads = 8)
umap2 <- data.frame(umap)
#ggplot() + geom_point(data = ortholog_umap2, aes(x = X1, y = X2), alpha = 0.2, size = 5)
umap2$treatment <- combined_data[,"treatment"]
library(ggrepel)
umap_clustering <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank()) +
scale_color_manual(values = custom_color_scale) +
labs(x = "Dimension 1", y = "Dimension 2") +
geom_point(data = umap2 %>%
arrange(treatment), aes(x = X1, y = X2, color = treatment), alpha = 0.1, size = 5)
umap_clustering
# http://www.sthda.com/english/articles/31-principal-component-methods-in-r-practical-guide/118-principal-component-analysis-in-r-prcomp-vs-princomp/
library(factoextra)
library(ggfortify)
combined_data <- rbind(c11_none[1:2000,], c11_recomb[1:2000,], c11_ap1903[1:2000,])
ggplot() + theme_bw() + scale_x_log10() + scale_y_log10() + geom_point(data = combined_data, aes(x = red, y = nir))
combined_data$zir <- combined_data$nir - combined_data$red * 0.01
ggplot() + theme_bw() + scale_x_log10() + scale_y_log10() + geom_point(data = combined_data, aes(x = red, y = zir))
combined_for_pca <- combined_data[,c("blu","grn","red","zir")]
clone2.pca <- prcomp(combined_for_pca, center = TRUE,scale. = TRUE)
fviz_eig(clone2.pca)
autoplot(clone2.pca, alpha = 0.2) +
scale_x_continuous(limits = c(-0.3,0.3)) + scale_y_continuous(limits = c(-0.3,0.3))
fviz_pca_var(clone2.pca,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
clone2.pca$rotation
pca2 <- data.frame("pc1" = clone2.pca$x[,1], "pc2" = clone2.pca$x[,2])
pca2$treatment <- combined_data[,"treatment"]
pca2$treatment <- factor(pca2$treatment, levels = c("none","recomb","ap1903"))
custom_color_scale <- c("none" = "magenta", "ap1903" = "cyan", "recomb" = "green")
ggplot() + theme_bw() + theme(panel.grid.minor = element_blank()) +
scale_color_manual(values = custom_color_scale) +
scale_x_continuous(limits = c(-5,5)) +
scale_y_continuous(limits = c(-3,2)) +
geom_point(data = pca2, aes(x = pc1, y = pc2, color = treatment), alpha = 0.05)
ggplot() + theme_bw() + theme(panel.grid.minor = element_blank()) +
scale_color_manual(values = custom_color_scale) +
scale_x_continuous(limits = c(-5,5)) +
scale_y_continuous(limits = c(-3,2)) +
geom_point(data = pca2, aes(x = pc1, y = pc2), alpha = 0.05) +
facet_grid(rows = vars(treatment))
pca_details <- cbind(combined_for_umap,pca2)
pca_details_melted <- melt(pca_details[,c("treatment","blu","grn","red","zir")], id. = "treatment")
ggplot() + theme_bw() +
scale_x_log10() +
geom_histogram(data = pca_details_melted, aes(x = value)) +
facet_grid(cols = vars(variable))
blu_cutoff <- 1e3
grn_cutoff <- 1e4
red_cutoff <- 1e4
zir_cutoff <- 1e3
ggplot() + theme_bw() + scale_x_log10() + geom_histogram(data = pca_details, aes(x = blu)) + geom_vline(xintercept = blu_cutoff)
ggplot() + theme_bw() + scale_x_log10() + geom_histogram(data = pca_details, aes(x = grn)) + geom_vline(xintercept = grn_cutoff)
ggplot() + theme_bw() + scale_x_log10() + geom_histogram(data = pca_details, aes(x = red)) + geom_vline(xintercept = red_cutoff)
ggplot() + theme_bw() + scale_x_log10() + geom_histogram(data = pca_details, aes(x = zir)) + geom_vline(xintercept = zir_cutoff)
pca_details$blu2 <- 0
pca_details$grn2 <- 0
pca_details$red2 <- 0
pca_details$zir2 <- 0
for(x in 1:nrow(pca_details)){
if(pca_details$blu[x] > blu_cutoff){pca_details$blu2[x] <- 1}
if(pca_details$grn[x] > grn_cutoff){pca_details$grn2[x] <- 1}
if(pca_details$red[x] > red_cutoff){pca_details$red2[x] <- 1}
if(pca_details$zir[x] > zir_cutoff){pca_details$zir2[x] <- 1}
}
pca_details$bgrn <- paste(pca_details$blu2,pca_details$grn2,pca_details$red2,pca_details$zir2,sep="")
bgrn_table <- data.frame(table(pca_details$bgrn)) %>% arrange(desc(Freq))
pca_details$label <- "Unannotated"
for(x in 1:nrow(pca_details)){
if(pca_details$bgrn[x] == "1001"){pca_details$label[x] <- "Unrecombined"}
if(pca_details$bgrn[x] == "0110"){pca_details$label[x] <- "Doubly_recombined"}
if(pca_details$bgrn[x] == "1010"){pca_details$label[x] <- "GA_only"}
if(pca_details$bgrn[x] == "0101"){pca_details$label[x] <- "GT_only"}
}
custom_color_scale2 <- c("Unannotated" = "black", "Unrecombined" = "blue", "Doubly_recombined" = "purple", "GA_only" = "red", "GT_only" = "darkgreen")
ggplot() + theme_bw() + theme(panel.grid.minor = element_blank()) +
scale_color_manual(values = custom_color_scale2) +
scale_x_continuous(limits = c(-5,5)) +
scale_y_continuous(limits = c(-3,2)) +
geom_point(data = pca_details, aes(x = pc1, y = pc2, color = label), alpha = 0.1) +
facet_grid(rows = vars(treatment))
custom_color_scale2 <- c("Unannotated" = "black", "Unrecombined" = "blue", "Doubly_recombined" = "purple", "GA_only" = "red", "GT_only" = "green")
ggplot() + theme_bw() + theme(panel.grid.minor = element_blank()) +
scale_color_manual(values = custom_color_scale2) +
scale_x_continuous(limits = c(-5,5)) +
scale_y_continuous(limits = c(-3,2)) +
geom_point(data = pca_details, aes(x = pc1, y = pc2, color = label), alpha = 0.1) +
facet_grid(rows = vars(treatment))
Clone11_PCA_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank()) +
scale_color_manual(values = custom_color_scale2) +
scale_x_continuous(limits = c(-5,5)) +
scale_y_continuous(limits = c(-3,2)) +
geom_point(data = pca_details, aes(x = pc1, y = pc2, color = label), alpha = 0.1) +
facet_grid(rows = vars(treatment))
Clone11_PCA_plot
ggsave(file = "plots/Clone11_PCA_plot.pdf", Clone11_PCA_plot, height = 5, width = 4)
ggsave(file = "plots/Clone11_PCA_plot.pdf", Clone11_PCA_plot, height = 5, width = 8)
ggsave(file = "plots/Clone11_PCA_plot.pdf", Clone11_PCA_plot, height = 5, width = 6)
ggsave(file = "plots/Clone11_PCA_plot.pdf", Clone11_PCA_plot, height = 5, width = 5.5)
ggsave(file = "plots/Clone11_PCA_plot.pdf", Clone11_PCA_plot, height = 4, width = 4.5)
ggsave(file = "plots/Clone11_PCA_plot.pdf", Clone11_PCA_plot, height = 3.6, width = 4.5)
clone2.pca$rotation
fviz_pca_var(clone2.pca,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
clone2.pca
View(clone2.pca)
Clone11_PCA_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank()) +
scale_color_manual(values = custom_color_scale2) +
scale_x_continuous(limits = c(-5,5)) +
scale_y_continuous(limits = c(-3,2)) +
geom_point(data = pca_details, aes(x = pc1, y = pc2, color = label), alpha = 0.1, size = 1) +
facet_grid(rows = vars(treatment))
Clone11_PCA_plot
Clone11_PCA_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank()) +
scale_color_manual(values = custom_color_scale2) +
scale_x_continuous(limits = c(-5,5)) +
scale_y_continuous(limits = c(-3,2)) +
geom_point(data = pca_details, aes(x = pc1, y = pc2, color = label), alpha = 0.1, size = 0.5) +
facet_grid(rows = vars(treatment))
Clone11_PCA_plot
ggsave(file = "plots/Clone11_PCA_plot.pdf", Clone11_PCA_plot, height = 3.4, width = 4.5)
c11_bn_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank(), legend.position = "none") +
scale_color_manual(values = custom_color_scale) +
scale_x_log10(limits = axis_limits) + scale_y_log10(limits = axis_limits) +
geom_point(data = combined_data, aes(x = blu, y = nir, color = treatment), alpha = plot_alpha)
c11_arranged_plot
c11_bn_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank(), legend.position = "none") +
scale_x_log10(limits = axis_limits) + scale_y_log10(limits = axis_limits) +
geom_point(data = combined_data %>% treatment == "none", aes(x = blu, y = nir), alpha = plot_alpha)
View(combined_data)
c11_bn_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank(), legend.position = "none") +
scale_x_log10(limits = axis_limits) + scale_y_log10(limits = axis_limits) +
geom_point(data = combined_data %>% filter(treatment == "none"), aes(x = blu, y = nir), alpha = plot_alpha)
c11_bn_plot
View(combined_data)
c11_recomb_bn_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank(), legend.position = "recomb") +
scale_x_log10(limits = axis_limits) + scale_y_log10(limits = axis_limits) +
geom_point(data = combined_data %>% filter(treatment == "recomb"), aes(x = blu, y = nir), alpha = plot_alpha)
c11_recomb_bn_plot
c11_ap1903_bn_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank(), legend.position = "ap1903") +
scale_x_log10(limits = axis_limits) + scale_y_log10(limits = axis_limits) +
geom_point(data = combined_data %>% filter(treatment == "ap1903"), aes(x = blu, y = nir), alpha = plot_alpha)
c11_ap1903_bn_plot
c11_recomb_bn_plot
c11_none_gr_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank(), legend.position = "none") +
scale_x_log10(limits = axis_limits) + scale_y_log10(limits = axis_limits) +
geom_point(data = combined_data %>% filter(treatment == "none"), aes(x = grn, y = red), alpha = plot_alpha)
c11_none_gr_plot
c11_recomb_gr_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank(), legend.position = "recomb") +
scale_x_log10(limits = axis_limits) + scale_y_log10(limits = axis_limits) +
geom_point(data = combined_data %>% filter(treatment == "recomb"), aes(x = grn, y = red), alpha = plot_alpha)
c11_recomb_gr_plot
c11_ap1903_gr_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank(), legend.position = "ap1903") +
scale_x_log10(limits = axis_limits) + scale_y_log10(limits = axis_limits) +
geom_point(data = combined_data %>% filter(treatment == "ap1903"), aes(x = grn, y = red), alpha = plot_alpha)
c11_ap1903_gr_plot
c11_gr_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank(), legend.position = "none") +
scale_color_manual(values = custom_color_scale) +
scale_x_log10(limits = axis_limits) + scale_y_log10(limits = axis_limits) +
geom_point(data = combined_data, aes(x = grn, y = red, color = treatment), alpha = plot_alpha) +
geom_rect(mapping = aes(xmin = 3e4, xmax = 1e6, ymin = 3e4, ymax = 1e6), alpha = 0, color = "black", linetype = 2)
c11_gr_plot
View(pca_details)
View(pca_details)
c11_none_gr_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank(), legend.position = "none") +
scale_x_log10(limits = axis_limits) + scale_y_log10(limits = axis_limits) +
geom_point(data = pca_details %>% filter(treatment == "none"), aes(x = grn, y = red), alpha = plot_alpha)
c11_none_gr_plot
c11_none_gr_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank(), legend.position = "none") +
scale_x_log10(limits = axis_limits) + scale_y_log10(limits = axis_limits) +
geom_point(data = pca_details %>% filter(treatment == "none"), aes(x = grn, y = red), alpha = plot_alpha)
c11_none_gr_plot
c11_recomb_gr_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank(), legend.position = "recomb") +
scale_x_log10(limits = axis_limits) + scale_y_log10(limits = axis_limits) +
geom_point(data = pca_details %>% filter(treatment == "recomb"), aes(x = grn, y = red), alpha = plot_alpha)
c11_recomb_gr_plot
c11_none_bz_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank(), legend.position = "none") +
scale_x_log10(limits = axis_limits) + scale_y_log10(limits = axis_limits) +
geom_point(data = pca_details %>% filter(treatment == "none"), aes(x = blu, y = zir), alpha = plot_alpha)
c11_none_gr_plot
c11_none_bz_plot
c11_ap1903_bz_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank(), legend.position = "none") +
scale_x_log10(limits = axis_limits) + scale_y_log10(limits = axis_limits) +
geom_point(data = pca_details %>% filter(treatment == "ap1903"), aes(x = blu, y = zir), alpha = plot_alpha)
c11_ap1903_bz_plot
c11_recomb_bz_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank(), legend.position = "none") +
scale_x_log10(limits = axis_limits) + scale_y_log10(limits = axis_limits) +
geom_point(data = pca_details %>% filter(treatment == "recomb"), aes(x = blu, y = zir), alpha = plot_alpha)
c11_recomb_bz_plot
c11_arranged_plot <- grid.arrange(c11_none_bz_plot, c11_recomb_bz_plot, c11_ap1903_bz_plot, c11_none_gr_plot, c11_recomb_gr_plot, c11_ap1903_gr_plot, ncol=3, nrow=2)
ggsave(file = "plots/c11_arranged_plot.png", c11_arranged_plot, height = 6, width = 8)
point_size = 0.5
c11_none_bz_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank(), legend.position = "none") +
scale_x_log10(limits = axis_limits) + scale_y_log10(limits = axis_limits) +
geom_point(data = pca_details %>% filter(treatment == "none"), aes(x = blu, y = zir), alpha = plot_alpha, size = point_size)
c11_none_bz_plot
c11_recomb_bz_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank(), legend.position = "none") +
scale_x_log10(limits = axis_limits) + scale_y_log10(limits = axis_limits) +
geom_point(data = pca_details %>% filter(treatment == "recomb"), aes(x = blu, y = zir), alpha = plot_alpha, size = point_size)
c11_recomb_bz_plot
c11_ap1903_bz_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank(), legend.position = "none") +
scale_x_log10(limits = axis_limits) + scale_y_log10(limits = axis_limits) +
geom_point(data = pca_details %>% filter(treatment == "ap1903"), aes(x = blu, y = zir), alpha = plot_alpha, size = point_size)
c11_ap1903_bz_plot
c11_none_gr_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank(), legend.position = "none") +
scale_x_log10(limits = axis_limits) + scale_y_log10(limits = axis_limits) +
geom_point(data = pca_details %>% filter(treatment == "none"), aes(x = grn, y = red), alpha = plot_alpha, size = point_size)
c11_none_gr_plot
c11_recomb_gr_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank(), legend.position = "recomb") +
scale_x_log10(limits = axis_limits) + scale_y_log10(limits = axis_limits) +
geom_point(data = pca_details %>% filter(treatment == "recomb"), aes(x = grn, y = red), alpha = plot_alpha, size = point_size)
c11_recomb_gr_plot
c11_ap1903_gr_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank(), legend.position = "ap1903") +
scale_x_log10(limits = axis_limits) + scale_y_log10(limits = axis_limits) +
geom_point(data = pca_details %>% filter(treatment == "ap1903"), aes(x = grn, y = red), alpha = plot_alpha, size = point_size)
c11_ap1903_gr_plot
c11_arranged_plot <- grid.arrange(c11_none_bz_plot, c11_recomb_bz_plot, c11_ap1903_bz_plot, c11_none_gr_plot, c11_recomb_gr_plot, c11_ap1903_gr_plot, ncol=3, nrow=2)
ggsave(file = "plots/c11_arranged_plot.png", c11_arranged_plot, height = 5, width = 8)
#paste("Percent double positive before selection:", round(sum(c11_recomb$grn >= 3e4 & c11_recomb$red >= 3e4) / nrow(c11_recomb) * 100,2))
#paste("Percent double positive after selection:", round(sum(c11_ap1903$grn >= 3e4 & c11_ap1903$red >= 3e4) / nrow(c11_ap1903) * 100,2))
plot_alpha = 0.1
point_size = 0.5
c11_none_bz_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank(), legend.position = "none") +
scale_x_log10(limits = axis_limits) + scale_y_log10(limits = axis_limits) +
geom_point(data = pca_details %>% filter(treatment == "none"), aes(x = blu, y = zir), alpha = plot_alpha, size = point_size)
c11_none_bz_plot
c11_recomb_bz_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank(), legend.position = "none") +
scale_x_log10(limits = axis_limits) + scale_y_log10(limits = axis_limits) +
geom_point(data = pca_details %>% filter(treatment == "recomb"), aes(x = blu, y = zir), alpha = plot_alpha, size = point_size)
c11_recomb_bz_plot
c11_ap1903_bz_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank(), legend.position = "none") +
scale_x_log10(limits = axis_limits) + scale_y_log10(limits = axis_limits) +
geom_point(data = pca_details %>% filter(treatment == "ap1903"), aes(x = blu, y = zir), alpha = plot_alpha, size = point_size)
c11_ap1903_bz_plot
c11_none_gr_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank(), legend.position = "none") +
scale_x_log10(limits = axis_limits) + scale_y_log10(limits = axis_limits) +
geom_point(data = pca_details %>% filter(treatment == "none"), aes(x = grn, y = red), alpha = plot_alpha, size = point_size)
c11_none_gr_plot
c11_recomb_gr_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank(), legend.position = "recomb") +
scale_x_log10(limits = axis_limits) + scale_y_log10(limits = axis_limits) +
geom_point(data = pca_details %>% filter(treatment == "recomb"), aes(x = grn, y = red), alpha = plot_alpha, size = point_size)
c11_recomb_gr_plot
c11_ap1903_gr_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank(), legend.position = "ap1903") +
scale_x_log10(limits = axis_limits) + scale_y_log10(limits = axis_limits) +
geom_point(data = pca_details %>% filter(treatment == "ap1903"), aes(x = grn, y = red), alpha = plot_alpha, size = point_size)
c11_ap1903_gr_plot
c11_arranged_plot <- grid.arrange(c11_none_bz_plot, c11_recomb_bz_plot, c11_ap1903_bz_plot, c11_none_gr_plot, c11_recomb_gr_plot, c11_ap1903_gr_plot, ncol=3, nrow=2)
ggsave(file = "plots/c11_arranged_plot.png", c11_arranged_plot, height = 4, width = 6)
#paste("Percent double positive before selection:", round(sum(c11_recomb$grn >= 3e4 & c11_recomb$red >= 3e4) / nrow(c11_recomb) * 100,2))
#paste("Percent double positive after selection:", round(sum(c11_ap1903$grn >= 3e4 & c11_ap1903$red >= 3e4) / nrow(c11_ap1903) * 100,2))
ggsave(file = "plots/c11_arranged_plot.png", c11_arranged_plot, height = 3, width = 6)
ggsave(file = "plots/c11_arranged_plot.png", c11_arranged_plot, height = 3, width = 5)
ggsave(file = "plots/c11_arranged_plot.pdf", c11_arranged_plot, height = 3, width = 5)
plot_alpha = 0.02
point_size = 0.25
c11_none_bz_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank(), legend.position = "none") +
scale_x_log10(limits = axis_limits) + scale_y_log10(limits = axis_limits) +
geom_point(data = pca_details %>% filter(treatment == "none"), aes(x = blu, y = zir), alpha = plot_alpha, size = point_size)
c11_none_bz_plot
c11_recomb_bz_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank(), legend.position = "none") +
scale_x_log10(limits = axis_limits) + scale_y_log10(limits = axis_limits) +
geom_point(data = pca_details %>% filter(treatment == "recomb"), aes(x = blu, y = zir), alpha = plot_alpha, size = point_size)
c11_recomb_bz_plot
c11_ap1903_bz_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank(), legend.position = "none") +
scale_x_log10(limits = axis_limits) + scale_y_log10(limits = axis_limits) +
geom_point(data = pca_details %>% filter(treatment == "ap1903"), aes(x = blu, y = zir), alpha = plot_alpha, size = point_size)
c11_ap1903_bz_plot
c11_none_gr_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank(), legend.position = "none") +
scale_x_log10(limits = axis_limits) + scale_y_log10(limits = axis_limits) +
geom_point(data = pca_details %>% filter(treatment == "none"), aes(x = grn, y = red), alpha = plot_alpha, size = point_size)
c11_none_gr_plot
c11_recomb_gr_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank(), legend.position = "recomb") +
scale_x_log10(limits = axis_limits) + scale_y_log10(limits = axis_limits) +
geom_point(data = pca_details %>% filter(treatment == "recomb"), aes(x = grn, y = red), alpha = plot_alpha, size = point_size)
c11_recomb_gr_plot
c11_ap1903_gr_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank(), legend.position = "ap1903") +
scale_x_log10(limits = axis_limits) + scale_y_log10(limits = axis_limits) +
geom_point(data = pca_details %>% filter(treatment == "ap1903"), aes(x = grn, y = red), alpha = plot_alpha, size = point_size)
c11_ap1903_gr_plot
c11_arranged_plot <- grid.arrange(c11_none_bz_plot, c11_recomb_bz_plot, c11_ap1903_bz_plot, c11_none_gr_plot, c11_recomb_gr_plot, c11_ap1903_gr_plot, ncol=3, nrow=2)
ggsave(file = "plots/c11_arranged_plot.pdf", c11_arranged_plot, height = 2.5, width = 4)
#paste("Percent double positive before selection:", round(sum(c11_recomb$grn >= 3e4 & c11_recomb$red >= 3e4) / nrow(c11_recomb) * 100,2))
#paste("Percent double positive after selection:", round(sum(c11_ap1903$grn >= 3e4 & c11_ap1903$red >= 3e4) / nrow(c11_ap1903) * 100,2))
ggsave(file = "plots/c11_arranged_plot.pdf", c11_arranged_plot, height = 2, width = 4)
ggsave(file = "plots/c11_arranged_plot.pdf", c11_arranged_plot, height = 2.2, width = 4.1)
fviz_pca_var(clone2.pca,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
fviz_pca_var(clone2.pca,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
pca_vectorplot <- fviz_pca_var(clone2.pca,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
pca_vectorplot
ggsave(file = "plots/pca_vectorplot.pdf", pca_vectorplot, height = 2, width = 2)
pca_vectorplot <- fviz_pca_var(clone2.pca,
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
pca_vectorplot
pca_vectorplot <- fviz_pca_var(clone2.pca,
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
) + title(NULL)
pca_vectorplot <- ggplot() + fviz_pca_var(clone2.pca,
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
pca_vectorplot <- fviz_pca_var(clone2.pca,
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
pca_vectorplot
ggsave(file = "plots/pca_vectorplot.pdf", pca_vectorplot, height = 2, width = 2)
