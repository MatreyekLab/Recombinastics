rep1_ga <- read.delim(file = "data/GN_recombinations/Rep1_GA_outfile.tsv", header = T, stringsAsFactors = F)
rep1_ga2 <- data.frame(table(rep1_ga$attB)) %>% mutate(attP = "GA")
rep1_gt <- read.delim(file = "data/GN_recombinations/Rep1_GT_outfile.tsv", header = T, stringsAsFactors = F)
rep1_gt2 <- data.frame(table(rep1_gt$attB)) %>% mutate(attP = "GT")
rep1_gc <- read.delim(file = "data/GN_recombinations/Rep1_GC_outfile.tsv", header = T, stringsAsFactors = F)
rep1_gc2 <- data.frame(table(rep1_gc$attB)) %>% mutate(attP = "GC")
rep1_gg <- read.delim(file = "data/GN_recombinations/Rep1_GG_outfile.tsv", header = T, stringsAsFactors = F)
rep1_gg2 <- data.frame(table(rep1_gg$attB)) %>% mutate(attP = "GG")
rep1_comb <- rbind(rep1_ga2, rep1_gt2, rep1_gc2, rep1_gg2)
colnames(rep1_comb) <- c("attB","Freq","attP")
gn_rep1_results_frame <- data.frame("attB" = NA, "attP" = NA, "final_freq" = NA, "start_freq" = NA)
for( x in c("GT","GA","GC","GG")){
temp_subset <- subset(rep1_comb, attP == x)
temp_subset$final_freq <- temp_subset$Freq / sum(temp_subset$Freq)
temp_subset2 <- merge(temp_subset[,c("attP","attB","final_freq")], attB_plasmid_mixture_table[,c("attB","start_freq")])
gn_rep1_results_frame <- rbind(gn_rep1_results_frame, temp_subset2)
}
gn_rep1_results_frame <- gn_rep1_results_frame %>% filter(!is.na(attB)) %>% mutate(rep = 1)
## Rep 2
gn_rep2 <- read.delim(file = "data/GN_recombinations/Rep2_outfile.tsv", header = T, stringsAsFactors = F)
gn_rep2_table <- data.frame(with(gn_rep2,table(attP,attB)))
gn_rep2_results_frame <- data.frame("attB" = NA, "attP" = NA, "final_freq" = NA, "start_freq" = NA)
for( x in c("GT","GA","GC","GG")){
temp_subset <- subset(gn_rep2_table, attP == x)
temp_subset$final_freq <- temp_subset$Freq / sum(temp_subset$Freq)
temp_subset2 <- merge(temp_subset[,c("attP","attB","final_freq")], attB_plasmid_mixture_table[,c("attB","start_freq")])
gn_rep2_results_frame <- rbind(gn_rep2_results_frame, temp_subset2)
}
gn_rep2_results_frame <- gn_rep2_results_frame %>% filter(!is.na(attB)) %>% mutate(rep = 2)
## Rep 3
gn_rep3 <- read.delim(file = "data/GN_recombinations/Rep3_outfile.tsv", header = T, stringsAsFactors = F)
gn_rep3_table <- data.frame(with(gn_rep3,table(attP,attB)))
gn_rep3_results_frame <- data.frame("attB" = NA, "attP" = NA, "final_freq" = NA, "start_freq" = NA)
for( x in c("GT","GA","GC","GG")){
temp_subset <- subset(gn_rep3_table, attP == x)
temp_subset$final_freq <- temp_subset$Freq / sum(temp_subset$Freq)
temp_subset2 <- merge(temp_subset[,c("attP","attB","final_freq")], attB_plasmid_mixture_table[,c("attB","start_freq")])
gn_rep3_results_frame <- rbind(gn_rep3_results_frame, temp_subset2)
}
gn_rep3_results_frame <- gn_rep3_results_frame %>% filter(!is.na(attB)) %>% mutate(rep = 3)
## Combine the results of all three replicates
gn_combined <- rbind(gn_rep1_results_frame, gn_rep2_results_frame, gn_rep3_results_frame)
gn_combined$enrichment <- gn_combined$final_freq/gn_combined$start_freq
gn_combined_summary <- gn_combined %>% group_by(attP, attB) %>% summarize(mean = mean(final_freq), sd = sd(final_freq))
gn_combined_summary2 <- rbind(gn_combined_summary, data.frame("attP" = "None", "attB" = attB_plasmid_mixture_table$attB, "mean" = attB_plasmid_mixture_table$start_freq, "sd" = NA))
gn_combined_summary2$attP <- factor(gn_combined_summary2$attP, levels = c("None", "GT","GA","GC","GG"))
Orthogonal_plasmid_recombinations <- ggplot() + scale_y_log10() + theme(panel.grid.major.x = element_blank()) +
labs(x = "AttP plasmid (individually tested)", y = "Fraction of\nrecombinants", color = "AttB\nplasmid\n(mixed)") +
geom_point(data = gn_combined_summary2, aes(x = attP, y = mean, color = attB), position = position_dodge(width = 0.6)) +
geom_errorbar(data = gn_combined_summary2, aes(x = attP, ymin = mean - sd/sqrt(2)*1.96, ymax = mean + sd/sqrt(3)*1.96, color = attB), position = position_dodge(width = 0.6), width = 0.5, alpha = 0.5)
ggsave(file = "plots/Orthogonal_plasmid_recombinations.pdf", Orthogonal_plasmid_recombinations, height = 2, width = 4.2)
Orthogonal_plasmid_recombinations
recomb_mixture_test <- gn_combined_summary[1:16,c("attP","attB")]
colnames(recomb_mixture_test) <- c("lp1","lp2")
simulation_test_size = 50000
recomb_mixture_test$on_target <- NA
for(x in 1:nrow(recomb_mixture_test)){
recomb_mix_lp1 <- recomb_mixture_test$lp1[x]
recomb_mix_lp2 <- recomb_mixture_test$lp2[x]
if(recomb_mix_lp1 == recomb_mix_lp2){
lp1_sampling <- sample(x = c(1,0), prob = c(0.5,0.5) , size = simulation_test_size, replace = T)
lp2_sampling <- sample(x = c(1,0), prob = c(0.5,0.5) , size = simulation_test_size, replace = T)
results_frame <- data.frame("lp1_on_target" = lp1_sampling == 1, "lp2_on_target" = lp2_sampling == 1)
results_frame$sum <- results_frame$lp1_on_target + results_frame$lp2_on_target
recomb_mixture_test$on_target[x] <- sum(results_frame$sum == 1)
}
if(recomb_mix_lp1 != recomb_mix_lp2){
lp1_probs <- gn_combined_summary %>% filter(attP == recomb_mix_lp1 & attB %in% c(recomb_mix_lp1, recomb_mix_lp2))
lp2_probs <- gn_combined_summary %>% filter(attP == recomb_mix_lp2 & attB %in% c(recomb_mix_lp1, recomb_mix_lp2))
lp1_sampling <- sample(x = lp1_probs$attB, prob = lp1_probs$mean , size = simulation_test_size, replace = T)
lp2_sampling <- sample(x = lp2_probs$attB, prob = lp2_probs$mean , size = simulation_test_size, replace = T)
results_frame <- data.frame("lp1_on_target" = lp1_sampling == recomb_mix_lp1, "lp2_on_target" = lp2_sampling == recomb_mix_lp2)
results_frame$sum <- results_frame$lp1_on_target + results_frame$lp2_on_target
recomb_mixture_test$on_target[x] <- sum(results_frame$sum == 2)
}
}
recomb_mixture_test$frac_on_target <- recomb_mixture_test$on_target / simulation_test_size
Double_LP_heatmap <- ggplot() + labs(x = "First landing pad", y = "Second landing pad", fill = "Fraction\nwith unique\nrecombinant\nplasmid pair") +
scale_fill_gradient2(low = "white", high = "red", midpoint = 0.8) +
geom_tile(data = recomb_mixture_test, aes(x = lp1, y = lp2, fill = frac_on_target)) +
geom_text(data = recomb_mixture_test, aes(x = lp1, y = lp2, label = round(frac_on_target,2)), size = 3)
ggsave(file = "plots/Double_LP_heatmap.pdf", Double_LP_heatmap, height = 2, width = 3.3)
Double_LP_heatmap
View(flanked_seq)
View(flanked_seq)
View(flanked_seq)
View(flanked_seq)
flanked_seq_geomean <- flanked_seq %>% group_by(sample, result) %>% summarize(geomean_fraction = 10^(mean(log10(fraction))))
View(flanked_seq_geomean)
Flanking_sequencing <- ggplot() + theme(panel.grid.major.x = element_blank(), legend.position = "top") +
labs(x = NULL, y = "Fraction of reads") +
geom_point(data = flanked_seq, aes(x = sample, y = fraction, color = result), position = position_dodge(width = 0.2)) +
geom_point(data = flanked_seq, aes(x = sample, y = fraction, color = result), position = position_dodge(width = 0.2), shape = 95, size = 10)
Flanking_sequencing
Flanking_sequencing <- ggplot() + theme(panel.grid.major.x = element_blank(), legend.position = "top") +
labs(x = NULL, y = "Fraction of reads") +
geom_point(data = flanked_seq, aes(x = sample, y = fraction, color = result), position = position_dodge(width = 0.2)) +
geom_point(data = flanked_seq_geomean, aes(x = sample, y = geomean_fraction, color = result), position = position_dodge(width = 0.2), shape = 95, size = 10)
ggsave(file = "plots/Flanking_sequencing.pdf", Flanking_sequencing, height = 1.8, width = 2.2)
Flanking_sequencing
Flanking_sequencing <- ggplot() + theme(panel.grid.major.x = element_blank(), legend.position = "top") +
labs(x = NULL, y = "Fraction of reads") +
geom_point(data = flanked_seq, aes(x = sample, y = fraction, color = result), position = position_dodge(width = 0.2), alpha = 0.4) +
geom_point(data = flanked_seq_geomean, aes(x = sample, y = geomean_fraction, color = result), position = position_dodge(width = 0.2), shape = 95, size = 10)
ggsave(file = "plots/Flanking_sequencing.pdf", Flanking_sequencing, height = 1.8, width = 2.2)
Flanking_sequencing
View(gn_combined_summary2)
View(gn_combined)
View(gn_combined)
View(gn_combined)
View(gn_combined)
Orthogonal_plasmid_recombinations <- ggplot() + scale_y_log10() + theme(panel.grid.major.x = element_blank()) +
labs(x = "AttP plasmid (individually tested)", y = "Fraction of\nrecombinants", color = "AttB\nplasmid\n(mixed)") +
geom_point(data = gn_combined, aes(x = attP, y = final_freq, color = attB), position = position_dodge(width = 0.6)) +
#geom_errorbar(data = gn_combined_summary2, aes(x = attP, ymin = mean - sd/sqrt(2)*1.96, ymax = mean + sd/sqrt(3)*1.96, color = attB), position = position_dodge(width = 0.6), width = 0.5, alpha = 0.5) +
geom_point(data = gn_combined_summary2, aes(x = attP, y = mean, color = attB), position = position_dodge(width = 0.6)) +
NULL
Orthogonal_plasmid_recombinations
Orthogonal_plasmid_recombinations <- ggplot() + scale_y_log10() + theme(panel.grid.major.x = element_blank()) +
labs(x = "AttP plasmid (individually tested)", y = "Fraction of\nrecombinants", color = "AttB\nplasmid\n(mixed)") +
geom_point(data = gn_combined, aes(x = attP, y = final_freq, color = attB), position = position_dodge(width = 0.6), alpha = 0.4) +
#geom_errorbar(data = gn_combined_summary2, aes(x = attP, ymin = mean - sd/sqrt(2)*1.96, ymax = mean + sd/sqrt(3)*1.96, color = attB), position = position_dodge(width = 0.6), width = 0.5, alpha = 0.5) +
geom_point(data = gn_combined_summary2, aes(x = attP, y = mean, color = attB), position = position_dodge(width = 0.6), shape = 95, size = 10) +
NULL
Orthogonal_plasmid_recombinations
View(gn_combined)
View(gn_combined_summary2)
Orthogonal_plasmid_recombinations <- ggplot() + scale_y_log10() + theme(panel.grid.major.x = element_blank()) +
labs(x = "AttP plasmid (individually tested)", y = "Fraction of\nrecombinants", color = "AttB\nplasmid\n(mixed)") +
geom_point(data = gn_combined, aes(x = attP, y = final_freq, color = attB), position = position_dodge(width = 0.6), alpha = 0.4) +
#geom_errorbar(data = gn_combined_summary2, aes(x = attP, ymin = mean - sd/sqrt(2)*1.96, ymax = mean + sd/sqrt(3)*1.96, color = attB), position = position_dodge(width = 0.6), width = 0.5, alpha = 0.5) +
geom_point(data = gn_combined_summary2 %>% filter(attP != "None"), aes(x = attP, y = mean, color = attB), position = position_dodge(width = 0.6), shape = 95, size = 10) +
NULL
ggsave(file = "plots/Orthogonal_plasmid_recombinations.pdf", Orthogonal_plasmid_recombinations, height = 2, width = 4.2)
Orthogonal_plasmid_recombinations
Flanking_sequencing <- ggplot() + theme(panel.grid.major.x = element_blank(), legend.position = "top") +
labs(x = NULL, y = "Fraction of reads") +
geom_point(data = flanked_seq, aes(x = sample, y = fraction, color = result), position = position_dodge(width = 0.2), alpha = 0.4) +
geom_point(data = flanked_seq_geomean, aes(x = sample, y = geomean_fraction, color = result), position = position_dodge(width = 0.4), shape = 95, size = 10)
ggsave(file = "plots/Flanking_sequencing.pdf", Flanking_sequencing, height = 1.8, width = 2.2)
ggsave(file = "plots/Flanking_sequencing.pdf", Flanking_sequencing, height = 2, width = 2.2)
Flanking_sequencing <- ggplot() + theme(panel.grid.major.x = element_blank(), legend.position = "top") +
labs(x = NULL, y = "Fraction of reads") +
geom_point(data = flanked_seq, aes(x = sample, y = fraction, color = result), position = position_dodge(width = 0.4), alpha = 0.4) +
geom_point(data = flanked_seq_geomean, aes(x = sample, y = geomean_fraction, color = result), position = position_dodge(width = 0.4), shape = 95, size = 10)
ggsave(file = "plots/Flanking_sequencing.pdf", Flanking_sequencing, height = 2, width = 2.2)
Flanking_sequencing <- ggplot() + theme(panel.grid.major.x = element_blank(), legend.position = "top") +
labs(x = NULL, y = "Fraction of reads") +
geom_point(data = flanked_seq, aes(x = sample, y = fraction, color = result), position = position_dodge(width = 0.5), alpha = 0.4) +
geom_point(data = flanked_seq_geomean, aes(x = sample, y = geomean_fraction, color = result), position = position_dodge(width = 0.5), shape = 95, size = 10)
ggsave(file = "plots/Flanking_sequencing.pdf", Flanking_sequencing, height = 2, width = 2.2)
View(gn_combined_summary2)
gn_combined_summary2$attP <- factor(gn_combined_summary2$attP, levels = c("None", "GT","GA","GC","GG"))
Orthogonal_plasmid_recombinations <- ggplot() + scale_y_log10() + theme(panel.grid.major.x = element_blank()) +
labs(x = "AttP plasmid (individually tested)", y = "Fraction of\nrecombinants", color = "AttB\nplasmid\n(mixed)") +
geom_point(data = gn_combined, aes(x = attP, y = final_freq, color = attB), position = position_dodge(width = 0.6), alpha = 0.4) +
#geom_errorbar(data = gn_combined_summary2, aes(x = attP, ymin = mean - sd/sqrt(2)*1.96, ymax = mean + sd/sqrt(3)*1.96, color = attB), position = position_dodge(width = 0.6), width = 0.5, alpha = 0.5) +
geom_point(data = gn_combined_summary2, aes(x = attP, y = mean, color = attB), position = position_dodge(width = 0.6), shape = 95, size = 6) +
NULL
ggsave(file = "plots/Orthogonal_plasmid_recombinations.pdf", Orthogonal_plasmid_recombinations, height = 2, width = 4.2)
Orthogonal_plasmid_recombinations
gn_combined$attP <- factor(gn_combined$attP, levels = c("None", "GT","GA","GC","GG"))
gn_combined_summary2$attP <- factor(gn_combined_summary2$attP, levels = c("None", "GT","GA","GC","GG"))
Orthogonal_plasmid_recombinations <- ggplot() + scale_y_log10() + theme(panel.grid.major.x = element_blank()) +
labs(x = "AttP plasmid (individually tested)", y = "Fraction of\nrecombinants", color = "AttB\nplasmid\n(mixed)") +
geom_point(data = gn_combined, aes(x = attP, y = final_freq, color = attB), position = position_dodge(width = 0.6), alpha = 0.4) +
#geom_errorbar(data = gn_combined_summary2, aes(x = attP, ymin = mean - sd/sqrt(2)*1.96, ymax = mean + sd/sqrt(3)*1.96, color = attB), position = position_dodge(width = 0.6), width = 0.5, alpha = 0.5) +
geom_point(data = gn_combined_summary2, aes(x = attP, y = mean, color = attB), position = position_dodge(width = 0.6), shape = 95, size = 6) +
NULL
ggsave(file = "plots/Orthogonal_plasmid_recombinations.pdf", Orthogonal_plasmid_recombinations, height = 2, width = 4.2)
gn_combined$attP <- factor(gn_combined$attP, levels = c("None", "GT","GA","GC","GG"))
gn_combined_summary2$attP <- factor(gn_combined_summary2$attP, levels = c("None", "GT","GA","GC","GG"))
Orthogonal_plasmid_recombinations <- ggplot() + scale_y_log10() + theme(panel.grid.major.x = element_blank()) +
labs(x = "AttP plasmid (individually tested)", y = "Fraction of\nrecombinants", color = "AttB\nplasmid\n(mixed)") +
geom_point(data = gn_combined, aes(x = attP, y = final_freq, color = attB), position = position_dodge(width = 0.6), alpha = 0.4) +
#geom_errorbar(data = gn_combined_summary2, aes(x = attP, ymin = mean - sd/sqrt(2)*1.96, ymax = mean + sd/sqrt(3)*1.96, color = attB), position = position_dodge(width = 0.6), width = 0.5, alpha = 0.5) +
geom_point(data = gn_combined_summary2, aes(x = attP, y = mean, color = attB), position = position_dodge(width = 0.6), shape = 95, size = 6) +
NULL
Orthogonal_plasmid_recombinations
gn_combined$attP <- factor(gn_combined$attP, levels = rev(c("None", "GT","GA","GC","GG")))
gn_combined_summary2$attP <- factor(gn_combined_summary2$attP, levels = rev(c("None", "GT","GA","GC","GG")))
Orthogonal_plasmid_recombinations <- ggplot() + scale_y_log10() + theme(panel.grid.major.x = element_blank()) +
labs(x = "AttP plasmid (individually tested)", y = "Fraction of\nrecombinants", color = "AttB\nplasmid\n(mixed)") +
geom_point(data = gn_combined, aes(x = attP, y = final_freq, color = attB), position = position_dodge(width = 0.6), alpha = 0.4) +
#geom_errorbar(data = gn_combined_summary2, aes(x = attP, ymin = mean - sd/sqrt(2)*1.96, ymax = mean + sd/sqrt(3)*1.96, color = attB), position = position_dodge(width = 0.6), width = 0.5, alpha = 0.5) +
geom_point(data = gn_combined_summary2, aes(x = attP, y = mean, color = attB), position = position_dodge(width = 0.6), shape = 95, size = 6) +
NULL
Orthogonal_plasmid_recombinations
Orthogonal_plasmid_recombinations <- ggplot() + scale_y_log10() + theme(panel.grid.major.x = element_blank()) +
labs(x = "AttP plasmid (individually tested)", y = "Fraction of\nrecombinants", color = "AttB\nplasmid\n(mixed)") +
geom_point(data = gn_combined, aes(x = attP, y = final_freq, color = attB), position = position_dodge(width = 0.6), alpha = 0.4) +
#geom_errorbar(data = gn_combined_summary2, aes(x = attP, ymin = mean - sd/sqrt(2)*1.96, ymax = mean + sd/sqrt(3)*1.96, color = attB), position = position_dodge(width = 0.6), width = 0.5, alpha = 0.5) +
geom_point(data = gn_combined_summary2, aes(x = attP, y = mean, color = attB), position = position_dodge(width = 0.6), shape = 95, size = 6) +
NULL
Orthogonal_plasmid_recombinations
Orthogonal_plasmid_recombinations <- ggplot() + scale_y_log10() + theme(panel.grid.major.x = element_blank()) +
labs(x = "AttP plasmid (individually tested)", y = "Fraction of\nrecombinants", color = "AttB\nplasmid\n(mixed)") +
geom_point(data = gn_combined, aes(x = attP, y = final_freq, color = attB), position = position_dodge(width = 0.6), alpha = 0.4) +
#geom_errorbar(data = gn_combined_summary2, aes(x = attP, ymin = mean - sd/sqrt(2)*1.96, ymax = mean + sd/sqrt(3)*1.96, color = attB), position = position_dodge(width = 0.6), width = 0.5, alpha = 0.5) +
geom_point(data = gn_combined_summary2, aes(x = attP, y = mean, color = attB), position = position_dodge(width = 0.6), shape = 95, size = 4) +
NULL
ggsave(file = "plots/Orthogonal_plasmid_recombinations.pdf", Orthogonal_plasmid_recombinations, height = 2, width = 4.2)
View(gn_combined)
View(gn_combined)
View(gn_combined)
View(gn_combined_summary2)
Orthogonal_plasmid_recombinations <- ggplot() + scale_y_log10() + theme(panel.grid.major.x = element_blank()) +
labs(x = "AttP plasmid (individually tested)", y = "Fraction of\nrecombinants", color = "AttB\nplasmid\n(mixed)") +
geom_point(data = gn_combined_summary2, aes(x = attP, y = mean, color = attB), position = position_dodge(width = 0.6), shape = 95, size = 4) +
geom_point(data = gn_combined, aes(x = attP, y = final_freq, color = attB), position = position_dodge(width = 0.6), alpha = 0.4) +
#geom_errorbar(data = gn_combined_summary2, aes(x = attP, ymin = mean - sd/sqrt(2)*1.96, ymax = mean + sd/sqrt(3)*1.96, color = attB), position = position_dodge(width = 0.6), width = 0.5, alpha = 0.5) +
geom_point(data = gn_combined_summary2, aes(x = attP, y = mean, color = attB), position = position_dodge(width = 0.6), shape = 95, size = 4) +
NULL
ggsave(file = "plots/Orthogonal_plasmid_recombinations.pdf", Orthogonal_plasmid_recombinations, height = 2, width = 4.2)
unique(gn_combined$attP)
unique(gn_combined_summary2$attP)
Orthogonal_plasmid_recombinations <- ggplot() + scale_y_log10() + theme(panel.grid.major.x = element_blank()) +
labs(x = "AttP plasmid (individually tested)", y = "Fraction of\nrecombinants", color = "AttB\nplasmid\n(mixed)") +
geom_point(data = gn_combined_summary2, aes(x = attP, y = mean, color = attB), position = position_dodge(width = 0.6), shape = 95, size = 4) +
#geom_point(data = gn_combined, aes(x = attP, y = final_freq, color = attB), position = position_dodge(width = 0.6), alpha = 0.4) +
#geom_errorbar(data = gn_combined_summary2, aes(x = attP, ymin = mean - sd/sqrt(2)*1.96, ymax = mean + sd/sqrt(3)*1.96, color = attB), position = position_dodge(width = 0.6), width = 0.5, alpha = 0.5) +
#geom_point(data = gn_combined_summary2, aes(x = attP, y = mean, color = attB), position = position_dodge(width = 0.6), shape = 95, size = 4) +
NULL
ggsave(file = "plots/Orthogonal_plasmid_recombinations.pdf", Orthogonal_plasmid_recombinations, height = 2, width = 4.2)
gn_combined$attP <- factor(gn_combined$attP, levels = c("None", "GT","GA","GC","GG"))
gn_combined_summary2$attP <- factor(gn_combined_summary2$attP, levels = c("None", "GT","GA","GC","GG"))
Orthogonal_plasmid_recombinations <- ggplot() + scale_y_log10() + theme(panel.grid.major.x = element_blank()) +
labs(x = "AttP plasmid (individually tested)", y = "Fraction of\nrecombinants", color = "AttB\nplasmid\n(mixed)") +
geom_point(data = gn_combined, aes(x = attP, y = final_freq, color = attB), position = position_dodge(width = 0.6), alpha = 0.4) +
#geom_errorbar(data = gn_combined_summary2, aes(x = attP, ymin = mean - sd/sqrt(2)*1.96, ymax = mean + sd/sqrt(3)*1.96, color = attB), position = position_dodge(width = 0.6), width = 0.5, alpha = 0.5) +
geom_point(data = gn_combined_summary2, aes(x = attP, y = mean, color = attB), position = position_dodge(width = 0.6), shape = 95, size = 4) +
NULL
ggsave(file = "plots/Orthogonal_plasmid_recombinations.pdf", Orthogonal_plasmid_recombinations, height = 2, width = 4.2)
Orthogonal_plasmid_recombinations
attB_plasmid_mixture <- read.delim(file = "data/GN_recombinations/attBmix_outfile.tsv", header = T, stringsAsFactors = F)
attB_plasmid_mixture_table <- data.frame(table(attB_plasmid_mixture$attB))
attB_plasmid_mixture_table$Freq2 <- attB_plasmid_mixture_table$Freq / sum(attB_plasmid_mixture_table$Freq)
colnames(attB_plasmid_mixture_table) <- c("attB","start_count","start_freq")
## Rep 1
rep1_ga <- read.delim(file = "data/GN_recombinations/Rep1_GA_outfile.tsv", header = T, stringsAsFactors = F)
rep1_ga2 <- data.frame(table(rep1_ga$attB)) %>% mutate(attP = "GA")
rep1_gt <- read.delim(file = "data/GN_recombinations/Rep1_GT_outfile.tsv", header = T, stringsAsFactors = F)
rep1_gt2 <- data.frame(table(rep1_gt$attB)) %>% mutate(attP = "GT")
rep1_gc <- read.delim(file = "data/GN_recombinations/Rep1_GC_outfile.tsv", header = T, stringsAsFactors = F)
rep1_gc2 <- data.frame(table(rep1_gc$attB)) %>% mutate(attP = "GC")
rep1_gg <- read.delim(file = "data/GN_recombinations/Rep1_GG_outfile.tsv", header = T, stringsAsFactors = F)
rep1_gg2 <- data.frame(table(rep1_gg$attB)) %>% mutate(attP = "GG")
rep1_comb <- rbind(rep1_ga2, rep1_gt2, rep1_gc2, rep1_gg2)
colnames(rep1_comb) <- c("attB","Freq","attP")
gn_rep1_results_frame <- data.frame("attB" = NA, "attP" = NA, "final_freq" = NA, "start_freq" = NA)
for( x in c("GT","GA","GC","GG")){
temp_subset <- subset(rep1_comb, attP == x)
temp_subset$final_freq <- temp_subset$Freq / sum(temp_subset$Freq)
temp_subset2 <- merge(temp_subset[,c("attP","attB","final_freq")], attB_plasmid_mixture_table[,c("attB","start_freq")])
gn_rep1_results_frame <- rbind(gn_rep1_results_frame, temp_subset2)
}
gn_rep1_results_frame <- gn_rep1_results_frame %>% filter(!is.na(attB)) %>% mutate(rep = 1)
## Rep 2
gn_rep2 <- read.delim(file = "data/GN_recombinations/Rep2_outfile.tsv", header = T, stringsAsFactors = F)
gn_rep2_table <- data.frame(with(gn_rep2,table(attP,attB)))
gn_rep2_results_frame <- data.frame("attB" = NA, "attP" = NA, "final_freq" = NA, "start_freq" = NA)
for( x in c("GT","GA","GC","GG")){
temp_subset <- subset(gn_rep2_table, attP == x)
temp_subset$final_freq <- temp_subset$Freq / sum(temp_subset$Freq)
temp_subset2 <- merge(temp_subset[,c("attP","attB","final_freq")], attB_plasmid_mixture_table[,c("attB","start_freq")])
gn_rep2_results_frame <- rbind(gn_rep2_results_frame, temp_subset2)
}
gn_rep2_results_frame <- gn_rep2_results_frame %>% filter(!is.na(attB)) %>% mutate(rep = 2)
## Rep 3
gn_rep3 <- read.delim(file = "data/GN_recombinations/Rep3_outfile.tsv", header = T, stringsAsFactors = F)
gn_rep3_table <- data.frame(with(gn_rep3,table(attP,attB)))
gn_rep3_results_frame <- data.frame("attB" = NA, "attP" = NA, "final_freq" = NA, "start_freq" = NA)
for( x in c("GT","GA","GC","GG")){
temp_subset <- subset(gn_rep3_table, attP == x)
temp_subset$final_freq <- temp_subset$Freq / sum(temp_subset$Freq)
temp_subset2 <- merge(temp_subset[,c("attP","attB","final_freq")], attB_plasmid_mixture_table[,c("attB","start_freq")])
gn_rep3_results_frame <- rbind(gn_rep3_results_frame, temp_subset2)
}
gn_rep3_results_frame <- gn_rep3_results_frame %>% filter(!is.na(attB)) %>% mutate(rep = 3)
## Combine the results of all three replicates
gn_combined <- rbind(gn_rep1_results_frame, gn_rep2_results_frame, gn_rep3_results_frame)
gn_combined$enrichment <- gn_combined$final_freq/gn_combined$start_freq
gn_combined_summary <- gn_combined %>% group_by(attP, attB) %>% summarize(mean = mean(final_freq), sd = sd(final_freq))
gn_combined_summary2 <- rbind(gn_combined_summary, data.frame("attP" = "Input", "attB" = attB_plasmid_mixture_table$attB, "mean" = attB_plasmid_mixture_table$start_freq, "sd" = NA))
View(gn_combined_summary2)
View(gn_combined)
gn_combined$attP <- factor(gn_combined$attP, levels = c("GT","GA","GC","GG"))
gn_combined_summary2$attP <- factor(gn_combined_summary2$attP, levels = c("Input", "GT","GA","GC","GG"))
Orthogonal_plasmid_recombinations <- ggplot() + scale_y_log10() + theme(panel.grid.major.x = element_blank()) +
labs(x = "AttP plasmid (individually tested)", y = "Fraction of\nrecombinants", color = "AttB\nplasmid\n(mixed)") +
geom_point(data = gn_combined, aes(x = attP, y = final_freq, color = attB), position = position_dodge(width = 0.6), alpha = 0.4) +
#geom_errorbar(data = gn_combined_summary2, aes(x = attP, ymin = mean - sd/sqrt(2)*1.96, ymax = mean + sd/sqrt(3)*1.96, color = attB), position = position_dodge(width = 0.6), width = 0.5, alpha = 0.5) +
geom_point(data = gn_combined_summary2, aes(x = attP, y = mean, color = attB), position = position_dodge(width = 0.6), shape = 95, size = 4) +
NULL
ggsave(file = "plots/Orthogonal_plasmid_recombinations.pdf", Orthogonal_plasmid_recombinations, height = 2, width = 4.2)
Orthogonal_plasmid_recombinations
gn_combined$attP <- factor(gn_combined$attP, levels = c("GT","GA","GC","GG"))
gn_combined_summary2$attP <- factor(gn_combined_summary2$attP, levels = c("Input", "GT","GA","GC","GG"))
Orthogonal_plasmid_recombinations <- ggplot() + scale_y_log10() + theme(panel.grid.major.x = element_blank()) +
labs(x = "AttP plasmid (individually tested)", y = "Fraction of\nrecombinants", color = "AttB\nplasmid\n(mixed)") +
geom_point(data = gn_combined_summary2, aes(x = attP, y = mean, color = attB), position = position_dodge(width = 0.6), shape = 95, size = 4) +
geom_point(data = gn_combined, aes(x = attP, y = final_freq, color = attB), position = position_dodge(width = 0.6), alpha = 0.4) +
#geom_errorbar(data = gn_combined_summary2, aes(x = attP, ymin = mean - sd/sqrt(2)*1.96, ymax = mean + sd/sqrt(3)*1.96, color = attB), position = position_dodge(width = 0.6), width = 0.5, alpha = 0.5) +
geom_point(data = gn_combined_summary2, aes(x = attP, y = mean, color = attB), position = position_dodge(width = 0.6), shape = 95, size = 4) +
NULL
ggsave(file = "plots/Orthogonal_plasmid_recombinations.pdf", Orthogonal_plasmid_recombinations, height = 2, width = 4.2)
Orthogonal_plasmid_recombinations
recomb_mixture_test <- gn_combined_summary[1:16,c("attP","attB")]
colnames(recomb_mixture_test) <- c("lp1","lp2")
simulation_test_size = 50000
recomb_mixture_test$on_target <- NA
for(x in 1:nrow(recomb_mixture_test)){
recomb_mix_lp1 <- recomb_mixture_test$lp1[x]
recomb_mix_lp2 <- recomb_mixture_test$lp2[x]
if(recomb_mix_lp1 == recomb_mix_lp2){
lp1_sampling <- sample(x = c(1,0), prob = c(0.5,0.5) , size = simulation_test_size, replace = T)
lp2_sampling <- sample(x = c(1,0), prob = c(0.5,0.5) , size = simulation_test_size, replace = T)
results_frame <- data.frame("lp1_on_target" = lp1_sampling == 1, "lp2_on_target" = lp2_sampling == 1)
results_frame$sum <- results_frame$lp1_on_target + results_frame$lp2_on_target
recomb_mixture_test$on_target[x] <- sum(results_frame$sum == 1)
}
if(recomb_mix_lp1 != recomb_mix_lp2){
lp1_probs <- gn_combined_summary %>% filter(attP == recomb_mix_lp1 & attB %in% c(recomb_mix_lp1, recomb_mix_lp2))
lp2_probs <- gn_combined_summary %>% filter(attP == recomb_mix_lp2 & attB %in% c(recomb_mix_lp1, recomb_mix_lp2))
lp1_sampling <- sample(x = lp1_probs$attB, prob = lp1_probs$mean , size = simulation_test_size, replace = T)
lp2_sampling <- sample(x = lp2_probs$attB, prob = lp2_probs$mean , size = simulation_test_size, replace = T)
results_frame <- data.frame("lp1_on_target" = lp1_sampling == recomb_mix_lp1, "lp2_on_target" = lp2_sampling == recomb_mix_lp2)
results_frame$sum <- results_frame$lp1_on_target + results_frame$lp2_on_target
recomb_mixture_test$on_target[x] <- sum(results_frame$sum == 2)
}
}
recomb_mixture_test$frac_on_target <- recomb_mixture_test$on_target / simulation_test_size
Double_LP_heatmap <- ggplot() + labs(x = "First landing pad", y = "Second landing pad", fill = "Fraction\nwith unique\nrecombinant\nplasmid pair") +
scale_fill_gradient2(low = "white", high = "red", midpoint = 0.8) +
geom_tile(data = recomb_mixture_test, aes(x = lp1, y = lp2, fill = frac_on_target)) +
geom_text(data = recomb_mixture_test, aes(x = lp1, y = lp2, label = round(frac_on_target,2)), size = 3)
ggsave(file = "plots/Double_LP_heatmap.pdf", Double_LP_heatmap, height = 2, width = 3.3)
Double_LP_heatmap
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(tidyverse)
library(zoo)
library(googlesheets4)
library(reshape2)
mabel_seizures <- read_sheet("https://docs.google.com/spreadsheets/d/1vMLmtLRV0BVeLamMP7WUdZMlbqJrgLh_bHxaPvy16nA/edit?usp=sharing", sheet = "Mabel_seizures") %>% filter(!is.na(date))
Mabel_seizure_plot <- ggplot() + theme_bw() + theme(panel.grid.major.y = element_blank(), panel.grid.minor.y = element_blank()) +
labs(title = "Mabel seizures", x = "Date", y = NULL) + scale_y_continuous(breaks = c()) +
geom_point(data = mabel_seizures, aes(x = date, y = 0), alpha = 0.4, size = 2) +
geom_vline(xintercept = as.Date("2022-03-04"))
Mabel_seizure_plot
ggsave(file = "Mabel_seizure_plot.pdf", Mabel_seizure_plot, height = 2, width = 4)
ggsave(file = "/Users/kmatreyek/Dropbox/Website/Plots/Mabel_seizure_plot.png", Mabel_seizure_plot, height = 2, width = 4)
View(mabel_seizures)
mabel_seizures <- read_sheet("https://docs.google.com/spreadsheets/d/1vMLmtLRV0BVeLamMP7WUdZMlbqJrgLh_bHxaPvy16nA/edit?usp=sharing", sheet = "Mabel_seizures") %>% filter(!is.na(date)) %>% filter(date != "2023-01-09")
View(mabel_seizures)
View(mabel_seizures)
mabel_seizures$date != "2023-01-09"
mabel_seizures$date == "2023-01-09"
mabel_seizures <- read_sheet("https://docs.google.com/spreadsheets/d/1vMLmtLRV0BVeLamMP7WUdZMlbqJrgLh_bHxaPvy16nA/edit?usp=sharing", sheet = "Mabel_seizures") %>% filter(!is.na(date))
mabel_seizures2 <- mabel_seizures[-13,]
View(mabel_seizures2)
Mabel_seizure_plot <- ggplot() + theme_bw() + theme(panel.grid.major.y = element_blank(), panel.grid.minor.y = element_blank()) +
labs(title = "Mabel seizures", x = "Date", y = NULL) + scale_y_continuous(breaks = c()) +
geom_point(data = mabel_seizures, aes(x = date, y = 0), alpha = 0.4, size = 2) +
geom_vline(xintercept = as.Date("2022-03-04"))
Mabel_seizure_plot
ggsave(file = "Mabel_seizure_plot.pdf", Mabel_seizure_plot, height = 2, width = 4)
ggsave(file = "/Users/kmatreyek/Dropbox/Website/Plots/Mabel_seizure_plot.png", Mabel_seizure_plot, height = 2, width = 4)
Mabel_seizure_plot <- ggplot() + theme_bw() + theme(panel.grid.major.y = element_blank(), panel.grid.minor.y = element_blank()) +
labs(title = "Mabel seizures", x = "Date", y = NULL) + scale_y_continuous(breaks = c()) +
geom_point(data = mabel_seizures2, aes(x = date, y = 0), alpha = 0.4, size = 2) +
geom_vline(xintercept = as.Date("2022-03-04"))
Mabel_seizure_plot
ggsave(file = "Mabel_seizure_plot.pdf", Mabel_seizure_plot, height = 2, width = 4)
ggsave(file = "/Users/kmatreyek/Dropbox/Website/Plots/Mabel_seizure_plot.png", Mabel_seizure_plot, height = 2, width = 4)
Vif_apobec <- read.csv(file = "data,flow/Vif_Apobec/Orientations.csv")
Vif_apobec <- read.csv(file = "data/flow/Vif_Apobec/Orientations.csv")
vif_apobec <- read.csv(file = "data/flow/Vif_Apobec/Orientations.csv")
ggplot()
library(tidyverse)
ggplot()
ggplot() + geom_point(data = vif_apobec, aes(x = stop, y = wt))
ggplot() + scale_x_log10() + scale_y_log10() +
geom_point(data = vif_apobec, aes(x = stop, y = wt))
ggplot() + theme_bw() +
scale_x_log10() + scale_y_log10() +
geom_point(data = vif_apobec, aes(x = stop, y = wt))
ggplot() + theme_bw() +
scale_x_log10() + scale_y_log10() +
geom_abline(slope = 1), alpha = 0.2 +
ggplot() + theme_bw() +
scale_x_log10() + scale_y_log10() +
geom_abline(slope = 1, alpha = 0.2) +
geom_point(data = vif_apobec, aes(x = stop, y = wt))
ggplot() + theme_bw() +
scale_x_log10() + scale_y_log10() +
geom_abline(slope = 1, alpha = 0.2) +
geom_point(data = vif_apobec, aes(x = stop, y = wt, color = gene))
View(vif_apobec)
vif_apobec <- read.csv(file = "data/flow/Vif_Apobec/Orientations.csv")
ggplot() + theme_bw() +
scale_x_log10() + scale_y_log10() +
geom_abline(slope = 1, alpha = 0.2) +
geom_point(data = vif_apobec, aes(x = stop, y = wt, color = gene))
vif_apobec <- read.csv(file = "data/flow/Vif_Apobec/Orientations.csv")
ggplot() + theme_bw() +
scale_x_log10() + scale_y_log10() +
geom_abline(slope = 1, alpha = 0.2) +
geom_point(data = vif_apobec, aes(x = stop, y = wt, color = gene, shape = orientation))
ggplot() + theme_bw() +
scale_x_log10() + scale_y_log10() +
geom_abline(slope = 1, alpha = 0.2) +
geom_point(data = vif_apobec, aes(x = stop, y = wt, color = gene, shape = orientation), size = 4)
ggplot() + theme_bw() + theme(panel.grid.minor = element_blank()) +
scale_x_log10() + scale_y_log10() +
geom_abline(slope = 1, alpha = 0.2) +
geom_point(data = vif_apobec, aes(x = stop, y = wt, color = gene, shape = orientation), size = 4)
ggplot() + theme_bw() + theme(panel.grid.minor = element_blank()) +
scale_x_log10() + scale_y_log10() +
geom_abline(slope = 1, alpha = 0.2, linetype = 2, alpha = 0.5) +
geom_point(data = vif_apobec, aes(x = stop, y = wt, color = gene, shape = orientation), size = 4)
ggplot() + theme_bw() + theme(panel.grid.minor = element_blank()) +
scale_x_log10() + scale_y_log10() +
geom_abline(slope = 1, alpha = 0.2, linetype = 2, alpha = 0.5, size = 2) +
geom_point(data = vif_apobec, aes(x = stop, y = wt, color = gene, shape = orientation), size = 4)
ggplot() + theme_bw() + theme(panel.grid.minor = element_blank()) +
scale_x_log10() + scale_y_log10() +
geom_abline(slope = 1, alpha = 0.2, linetype = 2, alpha = 0.5, size = 1.5) +
geom_point(data = vif_apobec, aes(x = stop, y = wt, color = gene, shape = orientation), size = 4)
View(vif_apobec)
vif_apobec_fusions <- vif_apobec %>% filter(gene != "None")
vif_apobec_egfp <- vif_apobec %>% filter(gene == "None")
ggplot() + theme_bw() + theme(panel.grid.minor = element_blank()) +
scale_x_log10() + scale_y_log10() +
geom_abline(slope = 1, alpha = 0.2, linetype = 2, alpha = 0.5, size = 1.5) +
geom_point(data = vif_apobec_fusions, aes(x = stop, y = wt, color = gene, shape = orientation), size = 4)
ggplot() + theme_bw() + theme(panel.grid.minor = element_blank()) +
scale_x_log10() + scale_y_log10() +
geom_abline(slope = 1, alpha = 0.2, linetype = 2, alpha = 0.5, size = 1.5) +
geom_point(data = vif_apobec_fusions, aes(x = stop, y = wt, color = gene, shape = orientation), size = 4) +
geom_point(data = vif_apobec_egfp, aes(x = stop, y = wt), size = 4) +
```
ggplot() + theme_bw() + theme(panel.grid.minor = element_blank()) +
scale_x_log10() + scale_y_log10() +
geom_abline(slope = 1, alpha = 0.2, linetype = 2, alpha = 0.5, size = 1.5) +
geom_point(data = vif_apobec_fusions, aes(x = stop, y = wt, color = gene, shape = orientation), size = 4) +
geom_point(data = vif_apobec_egfp, aes(x = stop, y = wt), size = 4)
ggplot() + theme_bw() + theme(panel.grid.minor = element_blank()) +
scale_x_log10() + scale_y_log10() +
geom_abline(slope = 1, alpha = 0.2, linetype = 2, alpha = 0.5, size = 1.5) +
geom_point(data = vif_apobec_fusions, aes(x = stop, y = wt, color = gene, shape = orientation), size = 4) +
geom_point(data = vif_apobec_egfp, aes(x = stop, y = wt), size = 4, shape = 2)
ggplot() + theme_bw() + theme(panel.grid.minor = element_blank()) +
scale_x_log10() + scale_y_log10() +
geom_abline(slope = 1, alpha = 0.2, linetype = 2, alpha = 0.5, size = 1.5) +
geom_point(data = vif_apobec_fusions, aes(x = stop, y = wt, color = gene, shape = orientation), size = 4) +
geom_point(data = vif_apobec_egfp, aes(x = stop, y = wt), size = 4, shape = 1)
ggplot() + theme_bw() + theme(panel.grid.minor = element_blank()) +
scale_x_log10() + scale_y_log10() +
geom_abline(slope = 1, alpha = 0.2, linetype = 2, alpha = 0.5, size = 1.5) +
geom_point(data = vif_apobec_fusions, aes(x = stop, y = wt, color = gene, shape = orientation), size = 4) +
geom_point(data = vif_apobec_egfp, aes(x = stop, y = wt), size = 4, shape = 15)
ggplot() + theme_bw() + theme(panel.grid.minor = element_blank()) +
labs(x = "Geometric mean of MFI", y = "Geometric mean of MFI\n(HIV-1 vif coexpressed)") +
scale_x_log10() + scale_y_log10() +
geom_abline(slope = 1, alpha = 0.2, linetype = 2, alpha = 0.5, size = 1.5) +
geom_point(data = vif_apobec_fusions, aes(x = stop, y = wt, color = gene, shape = orientation), size = 4) +
geom_point(data = vif_apobec_egfp, aes(x = stop, y = wt), size = 4, shape = 15)
ggplot() + theme_bw() + theme(panel.grid.minor = element_blank()) +
labs(x = "Geometric mean of MFI (Apobec only)", y = "Geometric mean of MFI\n(HIV-1 vif coexpressed)") +
scale_x_log10() + scale_y_log10() +
geom_abline(slope = 1, alpha = 0.2, linetype = 2, alpha = 0.5, size = 1.5) +
geom_point(data = vif_apobec_fusions, aes(x = stop, y = wt, color = gene, shape = orientation), size = 4) +
geom_point(data = vif_apobec_egfp, aes(x = stop, y = wt), size = 4, shape = 15)
Apobec_fusions <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank()) +
labs(x = "Geometric mean of MFI (Apobec only)", y = "Geometric mean of MFI\n(HIV-1 vif coexpressed)") +
scale_x_log10() + scale_y_log10() +
geom_abline(slope = 1, alpha = 0.2, linetype = 2, alpha = 0.5, size = 1.5) +
geom_point(data = vif_apobec_fusions, aes(x = stop, y = wt, color = gene, shape = orientation), size = 4) +
geom_point(data = vif_apobec_egfp, aes(x = stop, y = wt), size = 4, shape = 15)
Apobec_fusions_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank()) +
labs(x = "Geometric mean of MFI (Apobec only)", y = "Geometric mean of MFI\n(HIV-1 vif coexpressed)") +
scale_x_log10() + scale_y_log10() +
geom_abline(slope = 1, alpha = 0.2, linetype = 2, alpha = 0.5, size = 1.5) +
geom_point(data = vif_apobec_fusions, aes(x = stop, y = wt, color = gene, shape = orientation), size = 4) +
geom_point(data = vif_apobec_egfp, aes(x = stop, y = wt), size = 4, shape = 15)
ggsave(file = "plots/Apobec_fusions_plot.pdf", Apobec_fusions_plot, height = 3, width = 4)
ggsave(file = "plots/Apobec_fusions_plot.pdf", Apobec_fusions_plot, height = 2, width = 4)
ggsave(file = "plots/Apobec_fusions_plot.pdf", Apobec_fusions_plot, height = 2.25, width = 4)
Apobec_fusions_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank()) +
labs(x = "Geometric mean of MFI (Apobec only)", y = "Geometric mean of MFI\n(HIV-1 vif coexpressed)") +
scale_x_log10() + scale_y_log10() +
geom_abline(slope = 1, alpha = 0.2, linetype = 2, alpha = 0.5, size = 1.5) +
geom_point(data = vif_apobec_fusions, aes(x = stop, y = wt, color = gene, shape = orientation), size = 4, alpha = 0.7) +
geom_point(data = vif_apobec_egfp, aes(x = stop, y = wt), size = 4, shape = 15, alpha = 0.7)
Apobec_fusions_plot
ggsave(file = "plots/Apobec_fusions_plot.pdf", Apobec_fusions_plot, height = 2.25, width = 4)
ggsave(file = "plots/Apobec_fusions_plot.pdf", Apobec_fusions_plot, height = 2.2, width = 4)
ggsave(file = "plots/Apobec_fusions_plot.pdf", Apobec_fusions_plot, height = 2.3, width = 4)
ggsave(file = "plots/Apobec_fusions_plot.pdf", Apobec_fusions_plot, height = 2.4, width = 4)
ggsave(file = "plots/Apobec_fusions_plot.pdf", Apobec_fusions_plot, height = 2.5, width = 4)
ggsave(file = "plots/Apobec_fusions_plot.pdf", Apobec_fusions_plot, height = 2.6, width = 4)
Apobec_fusions_plot <- ggplot() + theme_bw() + theme(panel.grid.minor = element_blank()) +
labs(x = "Geometric mean of MFI (Apobec only)", y = "Geometric mean of MFI\n(HIV-1 vif coexpressed)") +
scale_x_log10() + scale_y_log10() +
geom_abline(slope = 1, alpha = 0.2, linetype = 2, alpha = 0.5, size = 1.5) +
geom_point(data = vif_apobec_fusions, aes(x = stop, y = wt, color = gene, shape = orientation), size = 3, alpha = 0.7) +
geom_point(data = vif_apobec_egfp, aes(x = stop, y = wt), size = 3, shape = 15, alpha = 0.7)
Apobec_fusions_plot
ggsave(file = "plots/Apobec_fusions_plot.pdf", Apobec_fusions_plot, height = 2.6, width = 4)
ggsave(file = "plots/Apobec_fusions_plot.pdf", Apobec_fusions_plot, height = 2.2, width = 4)
R.Version()
